"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[50823],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>m});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=r.createContext({}),g=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=g(e.components);return r.createElement(d.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,d=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=g(n),s=a,m=p["".concat(d,".").concat(s)]||p[s]||c[s]||o;return n?r.createElement(m,l(l({ref:t},u),{},{components:n})):r.createElement(m,l({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=s;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i[p]="string"==typeof e?e:a,l[1]=i;for(var g=2;g<o;g++)l[g]=n[g];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},59078:(e,t,n)=>{n.d(t,{l:()=>r});const r={inLongVersion:"1.12.0"}},95895:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>i,default:()=>s,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var r=n(58168),a=(n(96540),n(15680)),o=n(59078);const l={title:"TubeMQ",sidebar_position:11},i=void 0,d={unversionedId:"data_node/extract_node/tube",id:"version-1.12.0/data_node/extract_node/tube",title:"TubeMQ",description:"Overview",source:"@site/versioned_docs/version-1.12.0/data_node/extract_node/tube.md",sourceDirName:"data_node/extract_node",slug:"/data_node/extract_node/tube",permalink:"/docs/1.12.0/data_node/extract_node/tube",draft:!1,editUrl:"https://github.com/apache/inlong-website/edit/master/versioned_docs/version-1.12.0/data_node/extract_node/tube.md",tags:[],version:"1.12.0",sidebarPosition:11,frontMatter:{title:"TubeMQ",sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Hudi",permalink:"/docs/1.12.0/data_node/extract_node/hudi"},next:{title:"Iceberg",permalink:"/docs/1.12.0/data_node/extract_node/iceberg"}},g={},u=[{value:"Overview",id:"overview",level:2},{value:"Version",id:"version",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Maven dependency",id:"maven-dependency",level:3},{value:"How to create a TubeMQ Extract Node",id:"how-to-create-a-tubemq-extract-node",level:2},{value:"Usage for SQL API",id:"usage-for-sql-api",level:3},{value:"Usage for InLong Dashboard",id:"usage-for-inlong-dashboard",level:3},{value:"Usage for InLong Manager Client",id:"usage-for-inlong-manager-client",level:3},{value:"TubeMQ Extract Node Options",id:"tubemq-extract-node-options",level:2}],p={toc:u},c="wrapper";function s(e){let{components:t,...n}=e;return(0,a.yg)(c,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"overview"},"Overview"),(0,a.yg)("p",null,(0,a.yg)("a",{parentName:"p",href:"https://inlong.apache.org/docs/modules/tubemq/overview"},"Apache InLong TubeMQ")," is a distributed, open source pub-sub messaging and steaming platform for real-time workloads, trillions of massive data precipitation."),(0,a.yg)("h2",{id:"version"},"Version"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Extract Node"),(0,a.yg)("th",{parentName:"tr",align:null},"Version"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"/docs/1.12.0/data_node/extract_node/tube"},"TubeMQ")),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)("a",{parentName:"td",href:"https://inlong.apache.org/docs/next/modules/tubemq/overview"},"TubeMQ"),": >=0.1.0",(0,a.yg)("br",null))))),(0,a.yg)("h2",{id:"dependencies"},"Dependencies"),(0,a.yg)("p",null,"In order to set up the ",(0,a.yg)("inlineCode",{parentName:"p"},"TubeMQ Extract Node"),", the following provides dependency information for both projects using a\nbuild automation tool (such as Maven or SBT) and SQL Client with Sort Connectors JAR bundles."),(0,a.yg)("h3",{id:"maven-dependency"},"Maven dependency"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},`<dependency>\n    <groupId>org.apache.inlong</groupId>\n    <artifactId>sort-connector-tubemq</artifactId>\n    <version>${o.l.inLongVersion}</version>\n</dependency>\n`)),(0,a.yg)("h2",{id:"how-to-create-a-tubemq-extract-node"},"How to create a TubeMQ Extract Node"),(0,a.yg)("h3",{id:"usage-for-sql-api"},"Usage for SQL API"),(0,a.yg)("p",null,"The example below shows how to create a TubeMQ Extract Node with ",(0,a.yg)("inlineCode",{parentName:"p"},"Flink SQL Cli")," :"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-sql"},"-- Create a TubeMQ table 'tube_extract_node' in Flink SQL Cli\nFlink SQL> CREATE TABLE tube_extract_node (\n     id INT,\n     name STRING,\n     age INT,\n     salary FLOAT \n     ) WITH (\n     'connector' = 'tubemq',\n     'topic' = 'topicName',\n     'master.rpc' = 'rpcUrl', -- 127.0.0.1:8715\n     'format' = 'json',\n     'group.name' = 'groupName');\n  \n-- Read data from tube_extract_node\nFlink SQL> SELECT * FROM tube_extract_node;\n")),(0,a.yg)("h3",{id:"usage-for-inlong-dashboard"},"Usage for InLong Dashboard"),(0,a.yg)("p",null,"TODO"),(0,a.yg)("h3",{id:"usage-for-inlong-manager-client"},"Usage for InLong Manager Client"),(0,a.yg)("p",null,"TODO"),(0,a.yg)("h2",{id:"tubemq-extract-node-options"},"TubeMQ Extract Node Options"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Parameter"),(0,a.yg)("th",{parentName:"tr",align:null},"Required"),(0,a.yg)("th",{parentName:"tr",align:null},"Default value"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"connector"),(0,a.yg)("td",{parentName:"tr",align:null},"required"),(0,a.yg)("td",{parentName:"tr",align:null},"tubemq"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"Set the connector type. Available options are ",(0,a.yg)("inlineCode",{parentName:"td"},"tubemq"),".")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"topic"),(0,a.yg)("td",{parentName:"tr",align:null},"required"),(0,a.yg)("td",{parentName:"tr",align:null},"(none)"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"Set the input or output topic")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"masterRpc"),(0,a.yg)("td",{parentName:"tr",align:null},"required"),(0,a.yg)("td",{parentName:"tr",align:null},"(none)"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"Set the TubeMQ master service address.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"format"),(0,a.yg)("td",{parentName:"tr",align:null},"required"),(0,a.yg)("td",{parentName:"tr",align:null},"(none)"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"TubeMQ message value serialization format, support JSON, Avro, etc. For more information, see the ",(0,a.yg)("a",{parentName:"td",href:"https://nightlies.apache.org/flink/flink-docs-release-1.15/docs/connectors/table/formats/overview/"},"Flink format"),".")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"groupId"),(0,a.yg)("td",{parentName:"tr",align:null},"required"),(0,a.yg)("td",{parentName:"tr",align:null},"(none)"),(0,a.yg)("td",{parentName:"tr",align:null},"String"),(0,a.yg)("td",{parentName:"tr",align:null},"Consumer group in TubeMQ")))))}s.isMDXComponent=!0}}]);