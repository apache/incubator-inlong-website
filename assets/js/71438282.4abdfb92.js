"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[50096],{15680:(e,a,t)=>{t.d(a,{xA:()=>u,yg:()=>g});var n=t(96540);function o(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){o(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function s(e,a){if(null==e)return{};var t,n,o=function(e,a){if(null==e)return{};var t,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||(o[t]=e[t]);return o}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)t=r[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),d=function(e){var a=n.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},u=function(e){var a=d(e.components);return n.createElement(l.Provider,{value:a},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},h=n.forwardRef((function(e,a){var t=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=d(t),h=o,g=p["".concat(l,".").concat(h)]||p[h]||c[h]||r;return t?n.createElement(g,i(i({ref:a},u),{},{components:t})):n.createElement(g,i({ref:a},u))}));function g(e,a){var t=arguments,o=a&&a.mdxType;if("string"==typeof e||o){var r=t.length,i=new Array(r);i[0]=h;var s={};for(var l in a)hasOwnProperty.call(a,l)&&(s[l]=a[l]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var d=2;d<r;d++)i[d]=t[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}h.displayName="MDXCreateElement"},12072:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var n=t(58168),o=(t(96540),t(15680));const r={title:"Release 1.5.0",author:"Charles Zhang",author_url:"https://github.com/dockerzhang",author_image_url:"https://avatars.githubusercontent.com/u/18047329?v=4",tags:["Apache InLong","Version"]},i=void 0,s={permalink:"/blog/2023/01/13/release-1.5.0",editUrl:"https://github.com/apache/inlong-website/edit/master/blog/blog/2023-01-13-release-1.5.0.md",source:"@site/blog/2023-01-13-release-1.5.0.md",title:"Release 1.5.0",description:"Apache InLong recently released version 1.5.0, which closed about 296+ issues, including 12+ major features and 110+ optimizations. Mainly completed the addition of StarRocks, Hudi, Doris, Elasticsearch, and other sinks, optimization of the Dashboard experience, refactor the MQ management model, support dirty data processing, full-link Apache Kafka support, and TubeMQ C++/Python SDK support for production, etc.",date:"2023-01-13T00:00:00.000Z",formattedDate:"January 13, 2023",tags:[{label:"Apache InLong",permalink:"/blog/tags/apache-in-long"},{label:"Version",permalink:"/blog/tags/version"}],readingTime:5.07,hasTruncateMarker:!0,authors:[{name:"Charles Zhang",url:"https://github.com/dockerzhang",imageURL:"https://avatars.githubusercontent.com/u/18047329?v=4"}],frontMatter:{title:"Release 1.5.0",author:"Charles Zhang",author_url:"https://github.com/dockerzhang",author_image_url:"https://avatars.githubusercontent.com/u/18047329?v=4",tags:["Apache InLong","Version"]},prevItem:{title:"Release 1.6.0",permalink:"/blog/2023/03/23/release-1.6.0"},nextItem:{title:"Release 1.4.0",permalink:"/blog/2022/11/16/release-1.4.0"}},l={authorsImageUrls:[void 0]},d=[{value:"About Apache InLong",id:"about-apache-inlong",level:2},{value:"1.5.0 Overview",id:"150-overview",level:2},{value:"Agent Module",id:"agent-module",level:3},{value:"DataProxy Module",id:"dataproxy-module",level:3},{value:"TubeMQ Module",id:"tubemq-module",level:3},{value:"Manager Module",id:"manager-module",level:3},{value:"Sort Module",id:"sort-module",level:3},{value:"Dashboard Module",id:"dashboard-module",level:3},{value:"Other",id:"other",level:3},{value:"1.5.0 Feature Introduction",id:"150-feature-introduction",level:2},{value:"Support StarRocks, Hudi, Doris, Elasticsearch Sinks",id:"support-starrocks-hudi-doris-elasticsearch-sinks",level:3},{value:"Optimization of the Dashboard Experience",id:"optimization-of-the-dashboard-experience",level:3},{value:"Refactor the MQ Management Model",id:"refactor-the-mq-management-model",level:3},{value:"Support Dirty Data Processing",id:"support-dirty-data-processing",level:3},{value:"Support Apache Kafka Full-link",id:"support-apache-kafka-full-link",level:3},{value:"Follow-up planning",id:"follow-up-planning",level:2}],u={toc:d},p="wrapper";function c(e){let{components:a,...r}=e;return(0,o.yg)(p,(0,n.A)({},u,r,{components:a,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Apache InLong recently released version 1.5.0, which closed about 296+ issues, including 12+ major features and 110+ optimizations. Mainly completed the addition of StarRocks, Hudi, Doris, Elasticsearch, and other sinks, optimization of the Dashboard experience, refactor the MQ management model, support dirty data processing, full-link Apache Kafka support, and TubeMQ C++/Python SDK support for production, etc."),(0,o.yg)("h2",{id:"about-apache-inlong"},"About Apache InLong"),(0,o.yg)("p",null,"As the industry's first one-stop open-source massive data integration framework, Apache InLong provides automatic, safe, reliable, and high-performance data transmission capabilities to facilitate businesses to build stream-based data analysis, modeling, and applications quickly. At present, InLong is widely used in various industries such as advertising, payment, social networking, games, artificial intelligence, etc., serving thousands of businesses, among which the scale of high-performance scene data exceeds 1 trillion/day, and the scale of high-reliability scene data exceeds 10 trillion/day sky."),(0,o.yg)("p",null,'The core keywords of InLong project positioning are "one-stop" and actual "massive data". For "one-stop", we hope to shield technical details, provide complete data integration and support services, and realize out-of-the-box; With its advantages, such as multi-cluster management, it can stably support larger-scale data volumes on the basis of trillions/day.'),(0,o.yg)("h2",{id:"150-overview"},"1.5.0 Overview"),(0,o.yg)("p",null,"Apache InLong recently released version 1.5.0, which closed about 296+ issues, including 12+ major features and 110+ optimizations. Mainly completed the addition of StarRocks, Hudi, Doris, Elasticsearch, and other data stream sinks, optimization of the Dashboard experience, reconstruction of the MQ management model, addition of dirty data processing, full-link Apache Kafka support, and TubeMQ C++/Python SDK support for production, etc. This version has also completed a large number of other features, mainly including the following:"),(0,o.yg)("h3",{id:"agent-module"},"Agent Module"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Support log collection in CVM scenarios"),(0,o.yg)("li",{parentName:"ul"},"Added direct sending Pulsar, sending DataProxy synchronous and asynchronous strategies")),(0,o.yg)("h3",{id:"dataproxy-module"},"DataProxy Module"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Refactor the MQ management model to support the rapid expansion of new MQ types"),(0,o.yg)("li",{parentName:"ul"},"Optimized caching layer to support Apache Kafka message queue"),(0,o.yg)("li",{parentName:"ul"},"Added support for BufferQueueChannel")),(0,o.yg)("h3",{id:"tubemq-module"},"TubeMQ Module"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Increase data sending and receiving delay statistics"),(0,o.yg)("li",{parentName:"ul"},"TubeMQ C++ SDK supports the produce"),(0,o.yg)("li",{parentName:"ul"},"TubeMQ Python SDK supports the produce")),(0,o.yg)("h3",{id:"manager-module"},"Manager Module"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Added Hudi data node and data stream management"),(0,o.yg)("li",{parentName:"ul"},"Added StarRocks data node and data stream management"),(0,o.yg)("li",{parentName:"ul"},"Optimize Elasticsearch data node and data stream management"),(0,o.yg)("li",{parentName:"ul"},"Added data conversion management in Manager Client"),(0,o.yg)("li",{parentName:"ul"},"Optimize Apache Kafka message queue management")),(0,o.yg)("h3",{id:"sort-module"},"Sort Module"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"The MySQL Load node inventory phase supports concurrent reading of tables without primary keys"),(0,o.yg)("li",{parentName:"ul"},"Added StarRocks, Hudi, Doris, Elasticsearch 5.x data flow support"),(0,o.yg)("li",{parentName:"ul"},"Add dirty data processing for Doris, PostgreSQL, Hive, HBase, Elasticsearch, etc."),(0,o.yg)("li",{parentName:"ul"},"Upgraded Iceberg to version 1.1.0"),(0,o.yg)("li",{parentName:"ul"},"StarRocks, PostgreSQL, Doris, Hudi and other flows support table-level indicators")),(0,o.yg)("h3",{id:"dashboard-module"},"Dashboard Module"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Experience optimization with more than 50 optimization points"),(0,o.yg)("li",{parentName:"ul"},"Add JSON, Key-Value, and AVRO formats"),(0,o.yg)("li",{parentName:"ul"},"Support ClickHouse, Iceberg, Elasticsearch, MySQL, and other data node management pages"),(0,o.yg)("li",{parentName:"ul"},"Added SQLServer, Oracle, MongoDB, and MQTT data source pages")),(0,o.yg)("h3",{id:"other"},"Other"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Add Spotless code formatting plugin and response pipeline"),(0,o.yg)("li",{parentName:"ul"},"Docker-compose comes with Apache Flink environment"),(0,o.yg)("li",{parentName:"ul"},"Added Grafana indicator display templates for Agent and DataProxy")),(0,o.yg)("h2",{id:"150-feature-introduction"},"1.5.0 Feature Introduction"),(0,o.yg)("h3",{id:"support-starrocks-hudi-doris-elasticsearch-sinks"},"Support StarRocks, Hudi, Doris, Elasticsearch Sinks"),(0,o.yg)("p",null,"In version 1.5.0, InLong expanded the new data node Connector, supported StarRocks, Hudi, Doris, Elasticsearch, and other flow directions for community user scenarios, and expanded the data warehouse and lake scenarios. These new data nodes are mainly contributed by @liaorui, @featzhang, @kuansix, @LvJiancheng, and other developers.\n",(0,o.yg)("img",{alt:"1.5.0-create-hudi-source",src:t(96640).A,width:"1332",height:"1228"})),(0,o.yg)("h3",{id:"optimization-of-the-dashboard-experience"},"Optimization of the Dashboard Experience"),(0,o.yg)("p",null,"Compared with traditional data integration projects, InLong has added concepts such as Group, Stream, and data nodes. Community users using Dashboard for the first time will be confused about the whole process. To reduce the cost of using Dashboard users, InLong has made a lot of optimizations for the Dashboard front-end page, with more than 50 optimization points, and adjusted the concept, process, and display. The figure below shows the process of creating a Stream in 1.5.0, which is more simplified than the previous version. Special thanks to @leezng, @bluewang, @kinfuy for optimizing the Dashboard and @Charles Zhang for the modification suggestions.\n",(0,o.yg)("img",{alt:"1.5.0-create-dashboard-stream",src:t(51281).A,width:"1955",height:"553"})),(0,o.yg)("h3",{id:"refactor-the-mq-management-model"},"Refactor the MQ Management Model"),(0,o.yg)("p",null,"To quickly support new message queue services (such as RocketMQ) to implement plug-ins, and unify the existing support for Pulsar, Kafka, and TubeMQ, in version 1.5.0, InLong DataProxy refactored the MQ management model, and all MQ types are based on ",(0,o.yg)("inlineCode",{parentName:"p"},"MessageQueueHandler ")," Implement the corresponding ",(0,o.yg)("inlineCode",{parentName:"p"},"Handler"),". Thanks to @woofyzhao and @luchunliang for the implementation of this feature. If you need to develop a new MQ type, you can refer to the DataProxy plug-in guide.\n",(0,o.yg)("img",{alt:"1.5.0-mq-handler",src:t(30436).A,width:"959",height:"511"})),(0,o.yg)("h3",{id:"support-dirty-data-processing"},"Support Dirty Data Processing"),(0,o.yg)("p",null,'If there is dirty data that does not meet the data specifications (such as field range exceeding, missing data fields, etc.) when entering the lake into the warehouse, it may cause the user task to fail to write and restart continuously. In version 1.5.0, InLong supports storing unrecoverable dirty data in external storage, including S3 and local logs. At the same time, users can customize the output port of dirty data and can configure "whether to enable dirty data archiving" and "whether to ignore write entry error", as follows to design a UML diagram for dirty data archiving. The realization of this feature is thanks to the support of @yunqingmoswu and @Yizhou-Yang.\n',(0,o.yg)("img",{alt:"1.5.0-dirty-data",src:t(37284).A,width:"1500",height:"577"})),(0,o.yg)("h3",{id:"support-apache-kafka-full-link"},"Support Apache Kafka Full-link"),(0,o.yg)("p",null,"In version 1.5.0, the DataProxy, Manager, Sort, and Dashboard modules have completed the full-link support for Apache Kafka. The support for Kafka has gone through two versions, and it is available for production in 1.5.0. When users create data streams Just choose Kafka. The implementation of this feature is thanks to @woofyzhao, @fuweng11, @haifxu for their support.\n",(0,o.yg)("img",{alt:"1.5.0-support-kafka",src:t(3221).A,width:"1869",height:"573"})),(0,o.yg)("p",null,"For more details on the 1.5.0 release, please refer to the release notes, which detail the features, enhancements, and bug fixes for this release."),(0,o.yg)("h2",{id:"follow-up-planning"},"Follow-up planning"),(0,o.yg)("p",null,"In the following versions, Apache InLong will add multi-tenant management, standardize data flow, resources, and permissions of projects, clusters, and users, and optimize the performance and stability of various data sources, Agent management, etc., expect more developers to participate and contribute."))}c.isMDXComponent=!0},51281:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/1.5.0-create-dashboard-stream-9a3f955dc1e9854da4f2d81442587665.png"},96640:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/1.5.0-create-hudi-source-d1860467d7a91d8c068aab055f4028c5.png"},37284:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/1.5.0-dirty-data-f0d44e031631c4128e14293d7fa0ec01.png"},30436:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/1.5.0-mq-handler-de6522ff228c5a35d74e661da04dee25.png"},3221:(e,a,t)=>{t.d(a,{A:()=>n});const n=t.p+"assets/images/1.5.0-support-kafka-3b9ddf99ca3d5779906e72865fdfe18a.png"}}]);