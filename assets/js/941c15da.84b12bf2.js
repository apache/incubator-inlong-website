"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[81883],{15680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>m});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),l=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=l(e.components);return a.createElement(p.Provider,{value:n},e.children)},g="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),g=l(t),u=r,m=g["".concat(p,".").concat(u)]||g[u]||s[u]||o;return t?a.createElement(m,i(i({ref:n},c),{},{components:t})):a.createElement(m,i({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var d={};for(var p in n)hasOwnProperty.call(n,p)&&(d[p]=n[p]);d.originalType=e,d[g]="string"==typeof e?e:r,i[1]=d;for(var l=2;l<o;l++)i[l]=t[l];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},75185:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>s,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var a=t(58168),r=(t(96540),t(15680));const o={title:"Manager Plugin",sidebar_position:6},i=void 0,d={unversionedId:"design_and_concept/how_to_extend_data_node_for_manager",id:"design_and_concept/how_to_extend_data_node_for_manager",title:"Manager Plugin",description:"Overview",source:"@site/docs/design_and_concept/how_to_extend_data_node_for_manager.md",sourceDirName:"design_and_concept",slug:"/design_and_concept/how_to_extend_data_node_for_manager",permalink:"/docs/next/design_and_concept/how_to_extend_data_node_for_manager",draft:!1,editUrl:"https://github.com/apache/inlong-website/edit/master/docs/design_and_concept/how_to_extend_data_node_for_manager.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{title:"Manager Plugin",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Dashboard Plugin",permalink:"/docs/next/design_and_concept/how_to_write_plugin_dashboard"},next:{title:"DataProxy Plugin",permalink:"/docs/next/design_and_concept/how_to_write_plugin_dataproxy"}},p={},l=[{value:"Overview",id:"overview",level:2},{value:"Extend Extract Node",id:"extend-extract-node",level:2},{value:"Extend Load Node",id:"extend-load-node",level:2}],c={toc:l},g="wrapper";function s(e){let{components:n,...t}=e;return(0,r.yg)(g,(0,a.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"overview"},"Overview"),(0,r.yg)("p",null,"Inlong is aimed at create dataflow between different data sources, now Inlong has support several universal data sources such as ",(0,r.yg)("strong",{parentName:"p"},"MySQL"),", ",(0,r.yg)("strong",{parentName:"p"},"Apache Kafka"),", ",(0,r.yg)("strong",{parentName:"p"},"ClickHouse")," on Input/Output respectively,\nYou can refer to ",(0,r.yg)("a",{parentName:"p",href:"/docs/next/data_node/extract_node/overview"},"Data Node")," for specific information. Each Data Node of InLong supports unified management through Manager to simplify the use of users.\nThis article describes how to extend a new data node through the Manager to provide services."),(0,r.yg)("h2",{id:"extend-extract-node"},"Extend Extract Node"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Develop extract node plugin in sort, refer to ",(0,r.yg)("a",{parentName:"li",href:"/docs/next/design_and_concept/how_to_extend_data_node_for_sort"},"Sort Plugin")),(0,r.yg)("li",{parentName:"ul"},"Add ",(0,r.yg)("strong",{parentName:"li"},"TaskType")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.common.enums.TaskTypeEnum")),(0,r.yg)("li",{parentName:"ul"},"Add ",(0,r.yg)("strong",{parentName:"li"},"SourceType")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.common.consts.SourceType")),(0,r.yg)("li",{parentName:"ul"},"Create new package under package path: ",(0,r.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.common.pojo.source"),", develop every entity class needed."),(0,r.yg)("li",{parentName:"ul"},"Create Operation class for new data source under package path: ",(0,r.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.service.source"),"."),(0,r.yg)("li",{parentName:"ul"},"Transfer data source to ",(0,r.yg)("strong",{parentName:"li"},"ExtractNode")," supported in ",(0,r.yg)("strong",{parentName:"li"},"Sort"),", create the implementation class Provider for the ",(0,r.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.provider.ExtractNodeProvider")," interface under the ",(0,r.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.provider")," path, and register it with the ",(0,r.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.ExtractNodeProviderFactory"))),(0,r.yg)("h2",{id:"extend-load-node"},"Extend Load Node"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Develop load node plugin in sort, refer to ",(0,r.yg)("a",{parentName:"li",href:"/docs/next/design_and_concept/how_to_extend_data_node_for_sort"},"Sort Plugin")),(0,r.yg)("li",{parentName:"ul"},"Add ",(0,r.yg)("strong",{parentName:"li"},"SinkType")," in ",(0,r.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.common.consts.SinkType")),(0,r.yg)("li",{parentName:"ul"},"Create new package under package path: ",(0,r.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.common.pojo.sink"),", develop every entity class needed."),(0,r.yg)("li",{parentName:"ul"},"Create Operation class for new data source under package path: ",(0,r.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.service.sink"),"."),(0,r.yg)("li",{parentName:"ul"},"Transfer data sink to ",(0,r.yg)("strong",{parentName:"li"},"LoadNode")," supported in ",(0,r.yg)("strong",{parentName:"li"},"Sort"),", create the implementation class Provider for the ",(0,r.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.provider.LoadNodeProvider")," interface under the ",(0,r.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.provider")," path, and register it with the ",(0,r.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.LoadNodeProviderFactory"))))}s.isMDXComponent=!0}}]);