"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[73187],{15680:(e,n,r)=>{r.d(n,{xA:()=>c,yg:()=>m});var t=r(96540);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function d(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=t.createContext({}),l=function(e){var n=t.useContext(p),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},c=function(e){var n=l(e.components);return t.createElement(p.Provider,{value:n},e.children)},s="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),s=l(r),u=a,m=s["".concat(p,".").concat(u)]||s[u]||g[u]||o;return r?t.createElement(m,i(i({ref:n},c),{},{components:r})):t.createElement(m,i({ref:n},c))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=u;var d={};for(var p in n)hasOwnProperty.call(n,p)&&(d[p]=n[p]);d.originalType=e,d[s]="string"==typeof e?e:a,i[1]=d;for(var l=2;l<o;l++)i[l]=r[l];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1638:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>d,toc:()=>l});var t=r(58168),a=(r(96540),r(15680));const o={title:"Manager Plugin",sidebar_position:6},i=void 0,d={unversionedId:"design_and_concept/how_to_extend_data_node_for_manager",id:"version-1.13.0/design_and_concept/how_to_extend_data_node_for_manager",title:"Manager Plugin",description:"Overview",source:"@site/versioned_docs/version-1.13.0/design_and_concept/how_to_extend_data_node_for_manager.md",sourceDirName:"design_and_concept",slug:"/design_and_concept/how_to_extend_data_node_for_manager",permalink:"/docs/design_and_concept/how_to_extend_data_node_for_manager",draft:!1,editUrl:"https://github.com/apache/inlong-website/edit/master/versioned_docs/version-1.13.0/design_and_concept/how_to_extend_data_node_for_manager.md",tags:[],version:"1.13.0",sidebarPosition:6,frontMatter:{title:"Manager Plugin",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Dashboard Plugin",permalink:"/docs/design_and_concept/how_to_write_plugin_dashboard"},next:{title:"DataProxy Plugin",permalink:"/docs/design_and_concept/how_to_write_plugin_dataproxy"}},p={},l=[{value:"Overview",id:"overview",level:2},{value:"Extend Extract Node",id:"extend-extract-node",level:2},{value:"Extend Load Node",id:"extend-load-node",level:2}],c={toc:l},s="wrapper";function g(e){let{components:n,...r}=e;return(0,a.yg)(s,(0,t.A)({},c,r,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"overview"},"Overview"),(0,a.yg)("p",null,"Inlong is aimed at create dataflow between different data sources, now Inlong has support several universal data sources such as ",(0,a.yg)("strong",{parentName:"p"},"MySQL"),", ",(0,a.yg)("strong",{parentName:"p"},"Apache Kafka"),", ",(0,a.yg)("strong",{parentName:"p"},"ClickHouse")," on Input/Output respectively,\nYou can refer to ",(0,a.yg)("a",{parentName:"p",href:"/docs/data_node/extract_node/overview"},"Data Node")," for specific information. Each Data Node of InLong supports unified management through Manager to simplify the use of users.\nThis article describes how to extend a new data node through the Manager to provide services."),(0,a.yg)("h2",{id:"extend-extract-node"},"Extend Extract Node"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Develop extract node plugin in sort, refer to ",(0,a.yg)("a",{parentName:"li",href:"/docs/design_and_concept/how_to_extend_data_node_for_sort"},"Sort Plugin")),(0,a.yg)("li",{parentName:"ul"},"Add ",(0,a.yg)("strong",{parentName:"li"},"TaskType")," in ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.common.enums.TaskTypeEnum")),(0,a.yg)("li",{parentName:"ul"},"Add ",(0,a.yg)("strong",{parentName:"li"},"SourceType")," in ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.common.consts.SourceType")),(0,a.yg)("li",{parentName:"ul"},"Create new package under package path: ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.common.pojo.source"),", develop every entity class needed."),(0,a.yg)("li",{parentName:"ul"},"Create Operation class for new data source under package path: ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.service.source"),"."),(0,a.yg)("li",{parentName:"ul"},"Transfer data source to ",(0,a.yg)("strong",{parentName:"li"},"ExtractNode")," supported in ",(0,a.yg)("strong",{parentName:"li"},"Sort"),", create the implementation class Provider for the ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.provider.ExtractNodeProvider")," interface under the ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.provider")," path, and register it with the ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.ExtractNodeProviderFactory"))),(0,a.yg)("h2",{id:"extend-load-node"},"Extend Load Node"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Develop load node plugin in sort, refer to ",(0,a.yg)("a",{parentName:"li",href:"/docs/design_and_concept/how_to_extend_data_node_for_sort"},"Sort Plugin")),(0,a.yg)("li",{parentName:"ul"},"Add ",(0,a.yg)("strong",{parentName:"li"},"SinkType")," in ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.common.consts.SinkType")),(0,a.yg)("li",{parentName:"ul"},"Create new package under package path: ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.common.pojo.sink"),", develop every entity class needed."),(0,a.yg)("li",{parentName:"ul"},"Create Operation class for new data source under package path: ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.service.sink"),"."),(0,a.yg)("li",{parentName:"ul"},"Transfer data sink to ",(0,a.yg)("strong",{parentName:"li"},"LoadNode")," supported in ",(0,a.yg)("strong",{parentName:"li"},"Sort"),", create the implementation class Provider for the ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.provider.LoadNodeProvider")," interface under the ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.provider")," path, and register it with the ",(0,a.yg)("inlineCode",{parentName:"li"},"org.apache.inlong.manager.pojo.sort.node.LoadNodeProviderFactory"))))}g.isMDXComponent=!0}}]);